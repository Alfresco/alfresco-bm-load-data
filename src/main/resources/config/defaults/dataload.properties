#
# Alfresco Server Details
#

DATALOAD.alfresco.admin.user.default=admin
DATALOAD.alfresco.admin.user.type=string
DATALOAD.alfresco.admin.user.title=Administrator Username
DATALOAD.alfresco.admin.user.group=Alfresco Server Details

DATALOAD.alfresco.admin.pwd.default=admin
DATALOAD.alfresco.admin.pwd.type=string
DATALOAD.alfresco.admin.pwd.title=Administrator Password
DATALOAD.alfresco.admin.pwd.mask=true
DATALOAD.alfresco.admin.pwd.group=Alfresco Server Details

DATALOAD.alfresco.server.default=localhost
DATALOAD.alfresco.server.type=string
DATALOAD.alfresco.server.regex=[a-zA-Z0-9\.]*
DATALOAD.alfresco.server.title=Alfresco Server
DATALOAD.alfresco.server.group=Alfresco Server Details

DATALOAD.alfresco.port.default=8080
DATALOAD.alfresco.port.type=int
DATALOAD.alfresco.port.min=1
DATALOAD.alfresco.port.max=65535
DATALOAD.alfresco.port.title=Alfresco port
DATALOAD.alfresco.port.group=Alfresco Server Details

DATALOAD.alfresco.scheme.default=http
DATALOAD.alfresco.scheme.type=string
DATALOAD.alfresco.scheme.title=Scheme
DATALOAD.alfresco.scheme.group=Alfresco Server Details
DATALOAD.alfresco.scheme.choice=["http", "https"]

DATALOAD.alfresco.url.default=${alfresco.scheme}://${alfresco.server}:${alfresco.port}
DATALOAD.alfresco.url.type=string
DATALOAD.alfresco.url.title=Alfresco URL
DATALOAD.alfresco.url.group=Alfresco Server Details

#
# Alfresco API
#

DATALOAD.alfresco.context.default=alfresco
DATALOAD.alfresco.context.type=string
DATALOAD.alfresco.context.title=Http URL Context
DATALOAD.alfresco.context.group=Alfresco API

DATALOAD.alfresco.apiServletName.default=api
DATALOAD.alfresco.apiServletName.type=string
DATALOAD.alfresco.apiServletName.title=API Servlet name
DATALOAD.alfresco.apiServletName.group=Alfresco API

DATALOAD.alfresco.serviceServletName.default=service
DATALOAD.alfresco.serviceServletName.type=string
DATALOAD.alfresco.serviceServletName.title=Service Servlet name
DATALOAD.alfresco.serviceServletName.group=Alfresco API

DATALOAD.alfresco.cmisBindingType.default=browser
DATALOAD.alfresco.cmisBindingType.type=string
DATALOAD.alfresco.cmisBindingType.title=CMIS Binding Type
DATALOAD.alfresco.cmisBindingType.description=The type of binding, being either 'browser' or 'atompub'.
DATALOAD.alfresco.cmisBindingType.group=Alfresco API
DATALOAD.alfresco.cmisBindingType.choice=["browser","atompub"]

DATALOAD.alfresco.cmisBindingUrl.default=${alfresco.url}/${alfresco.context}/api/-default-/public/cmis/versions/1.1/browser
DATALOAD.alfresco.cmisBindingUrl.type=string
DATALOAD.alfresco.cmisBindingUrl.title=CMIS Browser Binding URL
DATALOAD.alfresco.cmisBindingUrl.description=Endpoint of the CMIS Browser Binding (no other endpoint is supported)
DATALOAD.alfresco.cmisBindingUrl.group=Alfresco API

#
# Data Mirrors
#

DATALOAD.mirror.users.default=mirrors.${alfresco.server}.users
DATALOAD.mirror.users.type=string
DATALOAD.mirror.users.title=User Collection Name
DATALOAD.mirror.users.group=Data Mirrors

DATALOAD.mirror.sites.default=mirrors.${alfresco.server}.sites
DATALOAD.mirror.sites.type=string
DATALOAD.mirror.sites.title=Sites Collection Name
DATALOAD.mirror.sites.group=Data Mirrors

DATALOAD.mirror.siteMembers.default=mirrors.${alfresco.server}.siteMembers
DATALOAD.mirror.siteMembers.type=string
DATALOAD.mirror.siteMembers.title=Site Members Collection Name
DATALOAD.mirror.siteMembers.group=Data Mirrors

DATALOAD.mirror.fileFolders.default=mirrors.${alfresco.server}.filefolders
DATALOAD.mirror.fileFolders.type=string
DATALOAD.mirror.fileFolders.title=Folder and Files Collection Name
DATALOAD.mirror.fileFolders.group=Data Mirrors

#
# Site Data
#

DATALOAD.load.sitesCount.default=10
DATALOAD.load.sitesCount.type=int
DATALOAD.load.sitesCount.min=0
DATALOAD.load.sitesCount.title=Sites Count
DATALOAD.load.sitesCount.description=The number of sites to create.  Each site will be assigned a randomly-chosen creator.
DATALOAD.load.sitesCount.group=Site Data

DATALOAD.load.siteCreationDelay.default=100
DATALOAD.load.siteCreationDelay.type=int
DATALOAD.load.siteCreationDelay.min=0
DATALOAD.load.siteCreationDelay.title=Site Creation Delay
DATALOAD.load.siteCreationDelay.description=The time (in milliseconds) between site creation events.
DATALOAD.load.siteCreationDelay.group=Site Data

DATALOAD.load.usersPerSite.default=1
DATALOAD.load.usersPerSite.type=int
DATALOAD.load.usersPerSite.min=1
DATALOAD.load.usersPerSite.title=Users per Site
DATALOAD.load.usersPerSite.description=The number of users to join each site.  Only existing user are used.  Users will join multiple sites, if required.
DATALOAD.load.usersPerSite.group=Site Data

DATALOAD.load.siteMemberCreationDelay.default=100
DATALOAD.load.siteMemberCreationDelay.type=int
DATALOAD.load.siteMemberCreationDelay.min=0
DATALOAD.load.siteMemberCreationDelay.title=Site Member Creation Delay
DATALOAD.load.siteMemberCreationDelay.description=The time (in milliseconds) between site member creation events.
DATALOAD.load.siteMemberCreationDelay.group=Site Data

DATALOAD.load.batch.size.default=1000
DATALOAD.load.batch.size.type=int
DATALOAD.load.batch.size.min=0
DATALOAD.load.batch.size.title=Batch Size
DATALOAD.load.batch.size.hide=true
DATALOAD.load.batch.size.group=Site Data

DATALOAD.load.siteFormat.default=Site.%s.%05d
DATALOAD.load.siteFormat.type=string
DATALOAD.load.siteFormat.min=4
DATALOAD.load.siteFormat.max=255
DATALOAD.load.siteFormat.title=Site ID Format
DATALOAD.load.siteFormat.description=Add a format for Site ID (must include %s and %d values)
DATALOAD.load.siteFormat.group=Site Data

DATALOAD.event.warn.delay.default=3000
DATALOAD.event.warn.delay.type=int
DATALOAD.event.warn.delay.min=0
DATALOAD.event.warn.delay.title=Warn Delay
DATALOAD.event.warn.delay.hide=true
DATALOAD.event.warn.delay.group=Site Data

#
# Records Management
#

DATALOAD.rm.enabled.default=false
DATALOAD.rm.enabled.type=boolean
DATALOAD.rm.enabled.title=RM Enabled
DATALOAD.rm.enabled.description=Enable if RM is installed
DATALOAD.rm.enabled.group=Records Management

DATALOAD.rm.username.default=admin
DATALOAD.rm.username.type=string
DATALOAD.rm.username.title=RM Site Creator
DATALOAD.rm.username.description=The name of the user that created the RM site
DATALOAD.rm.username.group=Records Management

DATALOAD.rm.password.default=admin
DATALOAD.rm.password.type=string
DATALOAD.rm.password.title=RM Site Creator Password
DATALOAD.rm.password.description=The password of the user that created the RM site
DATALOAD.rm.password.mask=true
DATALOAD.rm.password.group=Records Management

DATALOAD.rm.apiUrl.default=${alfresco.url}/${alfresco.apiServletName}
DATALOAD.rm.apiUrl.type=string
DATALOAD.rm.apiUrl.title=RM API URL
DATALOAD.rm.apiUrl.description=Records management API URL
DATALOAD.rm.apiUrl.group=Records Management

DATALOAD.rm.userCount.default=50
DATALOAD.rm.userCount.type=int
DATALOAD.rm.userCount.min=0
DATALOAD.rm.userCount.title=RM User Count
DATALOAD.rm.userCount.description=The number of users to be given an RM-specific role
DATALOAD.rm.userCount.group=Records Management

DATALOAD.rm.assignmentDelay.default=100
DATALOAD.rm.assignmentDelay.type=int
DATALOAD.rm.assignmentDelay.min=0
DATALOAD.rm.assignmentDelay.title=RM Role Assignment Delay
DATALOAD.rm.assignmentDelay.description=The time between calls to assign RM-specific roles
DATALOAD.rm.assignmentDelay.group=Records Management

DATALOAD.rm.fileRatio.default=0.1
DATALOAD.rm.fileRatio.type=decimal
DATALOAD.rm.fileRatio.min=0.1
DATALOAD.rm.fileRatio.max=1.0
DATALOAD.rm.fileRatio.title=RM File Ratio
DATALOAD.rm.fileRatio.description=How often the created Files are randomly filed to RM (0.1 - 1.0)
DATALOAD.rm.fileRatio.group=Records Management

DATALOAD.rm.fileDelay.default=100
DATALOAD.rm.fileDelay.type=int
DATALOAD.rm.fileDelay.min=0
DATALOAD.rm.fileDelay.title=RM Filing Delay
DATALOAD.rm.fileDelay.description=The time (in milliseconds) between each File filed to RM
DATALOAD.rm.fileDelay.group=Records Management

#
# Smart folders (from Alfresco 5.1 on)
#
DATALOAD.smf.enabled.default=false
DATALOAD.smf.enabled.type=boolean
DATALOAD.smf.enabled.title=Smart Folders Enabled
DATALOAD.smf.enabled.description=Enable if 'Smart Folders' are available (Alfresco 5.1 and higher) 
DATALOAD.smf.enabled.group=Smart Folders

#also try /app:company_home/app:dictionary/app:smart_folders/smartfolder.sample
DATALOAD.smf.template.default=/Data Dictionary/Smart Folder Templates/smartFoldersExample.json
DATALOAD.smf.template.type=string
DATALOAD.smf.template.title=Smart folder template  
DATALOAD.smf.template.description=Full name with path of the template to assign to the aspect 
DATALOAD.smf.template.group=Smart Folders

DATALOAD.smf.siteRootSFName.default=Smart Folder Root
DATALOAD.smf.siteRootSFName.type=string
DATALOAD.smf.siteRootSFName.title=Smart root folder name in the sites
DATALOAD.smf.siteRootSFName.description=Name of the smart folder root in the sites 
DATALOAD.smf.siteRootSFName.group=Smart Folders

DATALOAD.smf.siteRatio.default=0.1
DATALOAD.smf.siteRatio.type=decimal
DATALOAD.smf.siteRatio.min=0.0
DATALOAD.smf.siteRatio.max=1.0
DATALOAD.smf.siteRatio.title=Smart folder site ratio
DATALOAD.smf.siteRatio.description=Ratio: How many sites should have a smart folder: '0.0 = none' to '1.0 = 100%'  
DATALOAD.smf.siteRatio.group=Smart Folders

DATALOAD.smf.fileRatio.default=0.1
DATALOAD.smf.fileRatio.type=decimal
DATALOAD.smf.fileRatio.min=0.0
DATALOAD.smf.fileRatio.max=1.0
DATALOAD.smf.fileRatio.title=Smart folder file ratio
DATALOAD.smf.fileRatio.description=Ratio: How often files are declared as smart folder file: '0.0 = never' - '1.0 = 100%'  
DATALOAD.smf.fileRatio.group=Smart Folders
#currently not implemented! TODO
DATALOAD.smf.fileRatio.hide=true

DATALOAD.smf.aspectName.default=P:smf:systemConfigSmartFolder
DATALOAD.smf.aspectName.type=string
DATALOAD.smf.aspectName.title=Smart folder aspect name
DATALOAD.smf.aspectName.description=Aspect name to add to smart folder root
DATALOAD.smf.aspectName.group=Smart Folders

DATALOAD.smf.propertyName.default=smf:system-template-location
DATALOAD.smf.propertyName.type=string
DATALOAD.smf.propertyName.title=Smart folder aspect's property name
DATALOAD.smf.propertyName.description=Property name to set to smart folder template
DATALOAD.smf.propertyName.group=Smart Folders

#
# Files and Folders
#

DATALOAD.siteLoad.maxActiveLoaders.default=8
DATALOAD.siteLoad.maxActiveLoaders.type=int
DATALOAD.siteLoad.maxActiveLoaders.min=1
DATALOAD.siteLoad.maxActiveLoaders.title=Maximum Active Loaders
DATALOAD.siteLoad.maxActiveLoaders.description=The maximum number of concurrent file-folder loaders
DATALOAD.siteLoad.maxActiveLoaders.group=Files and Folders

DATALOAD.siteLoad.loadCheckDelay.default=10000
DATALOAD.siteLoad.loadCheckDelay.type=int
DATALOAD.siteLoad.loadCheckDelay.min=1
DATALOAD.siteLoad.loadCheckDelay.title=Load Check Delay
DATALOAD.siteLoad.loadCheckDelay.description=How often the scheduler checks to see if more loaders are required
DATALOAD.siteLoad.loadCheckDelay.hide=true
DATALOAD.siteLoad.loadCheckDelay.group=Files and Folders

DATALOAD.siteLoad.subfolders.default=2
DATALOAD.siteLoad.subfolders.type=int
DATALOAD.siteLoad.subfolders.min=0
DATALOAD.siteLoad.subfolders.title=Subfolder Count
DATALOAD.siteLoad.subfolders.description=The number of subfolders to create down to the required depth
DATALOAD.siteLoad.subfolders.group=Files and Folders

DATALOAD.siteLoad.maxDepth.default=2
DATALOAD.siteLoad.maxDepth.type=int
DATALOAD.siteLoad.maxDepth.min=0
DATALOAD.siteLoad.maxDepth.title=Folder Depth
DATALOAD.siteLoad.maxDepth.description=The depth of the deepest folder within each document library; the document library node has depth zero (level one).
DATALOAD.siteLoad.maxDepth.group=Files and Folders

DATALOAD.siteLoad.filesPerFolder.default=10
DATALOAD.siteLoad.filesPerFolder.type=int
DATALOAD.siteLoad.filesPerFolder.min=0
DATALOAD.siteLoad.filesPerFolder.title=Files per Folder
DATALOAD.siteLoad.filesPerFolder.description=The number of files to add to each folder.  The same number of files are added regardless of folder depth.
DATALOAD.siteLoad.filesPerFolder.group=Files and Folders

#
# File Spoofing
#

DATALOAD.spoof.spoofSiteFiles.default=false
DATALOAD.spoof.spoofSiteFiles.type=boolean
DATALOAD.spoof.spoofSiteFiles.title=Spoof File Creation
DATALOAD.spoof.spoofSiteFiles.description='true' to spoof text files using the remote API: /api/model/filefolder/load
DATALOAD.spoof.spoofSiteFiles.group=File Spoofing

DATALOAD.spoof.filesPerTxn.default=1
DATALOAD.spoof.filesPerTxn.type=int
DATALOAD.spoof.filesPerTxn.min=0
DATALOAD.spoof.filesPerTxn.title=Files per Transaction
DATALOAD.spoof.filesPerTxn.description=The maximum number of files to create per transaction.  Use larger transactions to increase data generation rates.
DATALOAD.spoof.filesPerTxn.group=File Spoofing

DATALOAD.spoof.minFileSize.default=81920
DATALOAD.spoof.minFileSize.type=int
DATALOAD.spoof.minFileSize.min=0
DATALOAD.spoof.minFileSize.title=Minimum File Size
DATALOAD.spoof.minFileSize.description=The minimum file size for spoofed text documents (default 80K)
DATALOAD.spoof.minFileSize.group=File Spoofing

DATALOAD.spoof.maxFileSize.default=122880
DATALOAD.spoof.maxFileSize.type=int
DATALOAD.spoof.maxFileSize.min=1
DATALOAD.spoof.maxFileSize.title=Maximum File Size
DATALOAD.spoof.maxFileSize.description=The maximum file size for spoofed text documents (default 120K)
DATALOAD.spoof.maxFileSize.group=File Spoofing

DATALOAD.spoof.forceBinaryStorage.default=false
DATALOAD.spoof.forceBinaryStorage.type=boolean
DATALOAD.spoof.forceBinaryStorage.title=Force Binary Stroage
DATALOAD.spoof.forceBinaryStorage.description='true' to force text binary data to be streamed onto disk
DATALOAD.spoof.forceBinaryStorage.group=File Spoofing

DATALOAD.spoof.descriptionCount.default=1
DATALOAD.spoof.descriptionCount.type=int
DATALOAD.spoof.descriptionCount.min=0
DATALOAD.spoof.descriptionCount.title=Description Count
DATALOAD.spoof.descriptionCount.description=The number of cm:description properties to add to each file.  These are added as multilingual values.
DATALOAD.spoof.descriptionCount.group=File Spoofing

DATALOAD.spoof.descriptionSize.default=128
DATALOAD.spoof.descriptionSize.type=int
DATALOAD.spoof.descriptionSize.min=0
DATALOAD.spoof.descriptionSize.title=Description Size
DATALOAD.spoof.descriptionSize.description=The size (bytes) of each cm:description property
DATALOAD.spoof.descriptionSize.group=File Spoofing
